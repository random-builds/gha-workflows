name: all

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/all.yaml
  workflow_dispatch:
    inputs:
      dispatch_env:
        description: environment
        required: false
        default: dev
        type: string
        options:
          - dev
          - prod
  workflow_call:
    inputs:
      required:
        description: one
        required: true
        type: string
      default:
        description: default
        required: true
        default: default
        type: string
      optional:
        description: optional
        required: false
        type: string

defaults:
  run:
    shell: bash

env:
  workflow_env: workflow_env!
  workflow_env_overwritten: workflow_env_overwritten!

jobs:
  basic:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /tmp
        shell: sh
    steps:
      - run: pwd
      - run: pwd
        working-directory: /bin
      - run: echo step_output=step-output >> $GITHUB_OUTPUT
        id: with_output
    outputs:
      out_one: uno
      out_two: ${{ steps.with_output.outputs.step_output }}

  cache:
    runs-on: ubuntu-latest
    steps:
      - run: echo some-dependencies > dependency-file.txt
      - uses: actions/cache@v4
        id: cache
        with:
          path: dependencies
          key: ${{ hashFiles('**/dependency-file.txt') }}
      - run: |
          mkdir -p dependencies
          date > dependencies/dependency_one
        if: steps.cache.outputs.cache-hit != 'true'
      - run: cat dependencies/dependency_one

  upload-artifact:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - run: date > my-artifact
      - uses: actions/upload-artifact@v4
        with:
          name: my_artifact
          path: my-artifact
          retention-days: 1
          compression-level: '9'

  download-artifact:
    runs-on: ubuntu-latest
    needs: upload-artifact
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: my_artifact
          path: downloaded-artifact
      - run: ls -l downloaded-artifact && cat downloaded-artifact/my-artifact

  variables:
    runs-on: ubuntu-latest
    needs: basic
    environment: ${{ inputs.environment || 'dev' }}
    env:
      env_one: one
    steps:
      - run: echo env_two=two > $GITHUB_ENV
      - run: |
          echo $env_one
          echo $env_two
      - run: |
          echo ${{ vars.repo_config }}
          echo ${{ vars.env_dev_config }}
          echo ${{ vars.org_config }}
          
          echo ${{ secrets.repo_secret }}          
          echo ${{ secrets.env_dev_secret }}
          echo ${{ secrets.org_secret }}
          
          echo ${{ env.workflow_env }}
          echo ${{ env.workflow_env_overwritten }}
          echo ${{ env.env_one }}
          echo ${{ github.repository }}
          
          echo ${{ needs.basic.outputs.out_one }}
          echo ${{ needs.basic.outputs.out_two }}
        env:
          workflow_env_overwritten: overwritten!
      - run: |
            echo workflow dispatch
        if: inputs.dispatch_env

  custom-action:
    runs-on: ubuntu-latest
    needs: variables
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/custom_one
      - run: pwd

  matrix:
    runs-on: ubuntu-latest
    needs: basic
    strategy:
      max-parallel: 3
      fail-fast: true
      matrix:
        letter: [a,b,c]
        number: [1,2,3]
        include:
          - letter: a
            number: 3
            unique: =
        exclude:
          - letter: b
            number: 2
    steps:
      - name: ${{ matrix.letter }} - ${{ matrix.number }} - ${{ matrix.unique || '!' }}
        run: date

  fail-and-proceed:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - run: echo fail; exit 1
        continue-on-error: true
      - run: echo still running
      - run: echo sleeping; sleep 65s
        timeout-minutes: 1
        continue-on-error: true
      - run: echo still running 2
      - run: echo early exit; exit 1
      - run: echo not gonna run
      - run: echo still not gonna run
        if: success()
      - run: echo failed run
        if: failure()
      - run: echo always runs
        if: always()

  end:
    runs-on: ubuntu-latest
    needs:
      - fail-and-proceed
      - download-artifact
      - matrix
      - custom-action
    steps:
      - run: echo end